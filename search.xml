<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>PAC自定义规则</title>
    <url>/2021/01/30/PAC%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A7%84%E5%88%99/</url>
    <content><![CDATA[<h1 id="PAC自定义规则"><a href="#PAC自定义规则" class="headerlink" title="PAC自定义规则"></a>PAC自定义规则</h1><p>某些特定网站需要在全局模式下访问，来回切换很麻烦<br />在PAC文件中加入要访问的网站的url<br><a name="B6CaY"></a></p>
<h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><span id="more"></span>

<ul>
<li>通配符支持，如 <em>.example.com/</em> 实际书写时可省略 如 .example.com/ 意即 <code>*.example.com/*</code></li>
<li>正则表达式支持，以\开始和结束， 如 [\w]+://example.com<br />例外规则 @@，如 @@<em>.example.com/</em> 满足@@后规则的地址不使用代理</li>
<li>匹配地址开始和结尾 |，如 |<a href="http://example.com、example.com|/">http://example.com、example.com|</a> 分别表示以 <a href="http://example.com/">http://example.com</a> 开始和以 example.com 结束的地址</li>
<li>|| 标记，如 ||example.com 则 <a href="http://example.com/">http://example.com</a> 、<a href="https://example.com/">https://example.com</a> 、<a href="ftp://example.com/">ftp://example.com</a> 等地址均满足条件，只用于匹配地址开头</li>
<li>注释 ! 如 ! Comment</li>
<li>分隔符^，表示除了字母、数字或者 _ - . % 之外的任何字符。如 <a href="http://example.com^/">http://example.com^</a> ，<a href="http://example.com/">http://example.com/</a> 和<a href="http://example.com:8000/">http://example.com:8000/</a> 均满足条件，而 <a href="http://example.com.ar/">http://example.com.ar/</a> 不满足条件<br><a name="MxSse"></a><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2>在v2ray中的PAC中，在填写手动规则里填写<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i.stack.imgur.com</span><br><span class="line">|https://i.stack.imgur.com/</span><br></pre></td></tr></table></figure>
点击保存设置并从GFW List更新<br />浏览Pac文件 发现多了下面两行内容<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;i.stack.imgur.com&quot;</span>,</span><br><span class="line"><span class="string">&quot;|https:\/\/i.stack.imgur.com\/&quot;</span>,</span><br></pre></td></tr></table></figure></li>
</ul>
<p>如果不知道怎么写</p>
<p>直接把url的网址比较独特的一段粘贴来就行，因为支持通配符</p>
<p>比如下面的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.example.com</span><br></pre></td></tr></table></figure>

<p>就相当于匹配了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*.example.com*</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>科学上网</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title>Python--Matlibplot入门练习1</title>
    <url>/2021/01/30/Python--Matlibplot%E5%85%A5%E9%97%A8%E7%BB%83%E4%B9%A01/</url>
    <content><![CDATA[<h2 id="np-linspace"><a href="#np-linspace" class="headerlink" title="np.linspace()"></a>np.linspace()</h2><p>numpy.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None)</p>
<h3 id="endpoint"><a href="#endpoint" class="headerlink" title="endpoint"></a>endpoint</h3><p>endpoint表示生成的数组是否包含stop</p>
<span id="more"></span>

<p>endpoint=True</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x&#x3D;np.linspace(1,100,num&#x3D;10,endpoint&#x3D;True)</span><br><span class="line">print(x)</span><br><span class="line">结果：[  1.  12.  23.  34.  45.  56.  67.  78.  89. 100.]</span><br></pre></td></tr></table></figure>

<p>endpoint=False</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x&#x3D;np.linspace(1,100,num&#x3D;10,endpoint&#x3D;False)</span><br><span class="line">print(x)</span><br><span class="line">结果：[ 1.  10.9 20.8 30.7 40.6 50.5 60.4 70.3 80.2 90.1]</span><br></pre></td></tr></table></figure>

<h3 id="retstep"><a href="#retstep" class="headerlink" title="retstep"></a>retstep</h3><p>相当于公差</p>
<p>retstep=True</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x&#x3D;np.linspace(1,100,num&#x3D;10,retstep&#x3D;True)</span><br><span class="line">print(x)</span><br><span class="line">结果：(array([  1.,  12.,  23.,  34.,  45.,  56.,  67.,  78.,  89., 100.]), 11.0)</span><br></pre></td></tr></table></figure>

<h3 id="dtype"><a href="#dtype" class="headerlink" title="dtype"></a>dtype</h3><p>结果的输出类型 有np.int   np.bool……..</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x&#x3D;np.linspace(1,100,num&#x3D;10,dtype&#x3D;np.int)</span><br><span class="line">print(x)</span><br><span class="line">结果：[  1  12  23  34  45  56  67  78  89 100]</span><br></pre></td></tr></table></figure>

<h2 id="plt-plot"><a href="#plt-plot" class="headerlink" title="plt.plot()"></a>plt.plot()</h2><p>plt.plot(x,y,format_string,**kwargs)</p>
<blockquote>
<p><strong>x</strong>:X轴上的数据，一般为列表或numpy中的数组，可选（只绘制一条曲线时，可省略，把y轴数据的索引值作为x取值）；</p>
<p><strong>y</strong>:Y轴上的数据，一般为列表或numpy中的数组；</p>
<p><strong>format_string</strong>:控制绘制曲线的格式字符串，可选；</p>
<p>*<strong>*kwargs</strong>:第二组或者更多的（x,y,format_string），可以绘制多条曲线，当我们绘制多条曲线时，各条曲线的x不能省略。</p>
</blockquote>
<h3 id="同时绘制多条曲线"><a href="#同时绘制多条曲线" class="headerlink" title="同时绘制多条曲线"></a>同时绘制多条曲线</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">import numpy as np</span><br><span class="line">a &#x3D; np.arange(10)</span><br><span class="line">plt.plot(a,a*1.5,a,a*2.5,a,a*3.5,a,a**2)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zzl_Alexander/my-image/raw/master/img/Python--Matlibplot%E5%85%A5%E9%97%A8%E7%BB%83%E4%B9%A01A.png" alt="image.png"></p>
<h3 id="曲线格式"><a href="#曲线格式" class="headerlink" title="曲线格式"></a>曲线格式</h3><p>format_string控制绘制曲线的格式字符串，由颜色字符，风格字符，和标记字符组成。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fmt &#x3D; &#39;[marker][line][color]&#39;</span><br></pre></td></tr></table></figure>

<p>color:控制颜色，color = ‘g’;</p>
<p>linestyle:控制线条风格，linestyle = ‘dashed’;</p>
<p>marker:标记的风格，marker = ‘o’;</p>
<p>markerfacecolor:标记的颜色；</p>
<p>markersize;标记的大小;</p>
<p><strong>Markers</strong></p>
<table>
<thead>
<tr>
<th>character</th>
<th>description</th>
</tr>
</thead>
<tbody><tr>
<td><code>&#39;.&#39;</code></td>
<td>point marker</td>
</tr>
<tr>
<td><code>&#39;,&#39;</code></td>
<td>pixel marker</td>
</tr>
<tr>
<td><code>&#39;o&#39;</code></td>
<td>circle marker</td>
</tr>
<tr>
<td><code>&#39;v&#39;</code></td>
<td>triangle_down marker</td>
</tr>
<tr>
<td><code>&#39;^&#39;</code></td>
<td>triangle_up marker</td>
</tr>
<tr>
<td><code>&#39;&lt;&#39;</code></td>
<td>triangle_left marker</td>
</tr>
<tr>
<td><code>&#39;&gt;&#39;</code></td>
<td>triangle_right marker</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><code>&#39;1&#39;</code></th>
<th>tri_down marker</th>
</tr>
</thead>
<tbody><tr>
<td><code>&#39;2&#39;</code></td>
<td>tri_up marker</td>
</tr>
<tr>
<td><code>&#39;3&#39;</code></td>
<td>tri_left marker</td>
</tr>
<tr>
<td><code>&#39;4&#39;</code></td>
<td>tri_right marker</td>
</tr>
<tr>
<td><code>&#39;s&#39;</code></td>
<td>square marker</td>
</tr>
<tr>
<td><code>&#39;p&#39;</code></td>
<td>pentagon marker</td>
</tr>
<tr>
<td><code>&#39;*&#39;</code></td>
<td>star marker</td>
</tr>
<tr>
<td><code>&#39;h&#39;</code></td>
<td>hexagon1 marker</td>
</tr>
<tr>
<td><code>&#39;H&#39;</code></td>
<td>hexagon2 marker</td>
</tr>
<tr>
<td><code>&#39;+&#39;</code></td>
<td>plus marker</td>
</tr>
<tr>
<td><code>&#39;x&#39;</code></td>
<td>x marker</td>
</tr>
<tr>
<td><code>&#39;D&#39;</code></td>
<td>diamond marker</td>
</tr>
<tr>
<td><code>&#39;d&#39;</code></td>
<td>thin_diamond marker</td>
</tr>
<tr>
<td>`’</td>
<td>‘`</td>
</tr>
<tr>
<td><code>&#39;_&#39;</code></td>
<td>hline marker</td>
</tr>
</tbody></table>
<p><strong>Line Styles</strong></p>
<table>
<thead>
<tr>
<th>character</th>
<th>description</th>
</tr>
</thead>
<tbody><tr>
<td><code>&#39;-&#39;</code></td>
<td>solid line style</td>
</tr>
<tr>
<td><code>&#39;--&#39;</code></td>
<td>dashed line style</td>
</tr>
<tr>
<td><code>&#39;-.&#39;</code></td>
<td>dash-dot line style</td>
</tr>
<tr>
<td><code>&#39;:&#39;</code></td>
<td>dotted line style</td>
</tr>
</tbody></table>
<p>**<br>**</p>
<p><strong>Colors</strong></p>
<table>
<thead>
<tr>
<th>character</th>
<th>color</th>
</tr>
</thead>
<tbody><tr>
<td><code>&#39;b&#39;</code></td>
<td>blue</td>
</tr>
<tr>
<td><code>&#39;g&#39;</code></td>
<td>green</td>
</tr>
<tr>
<td><code>&#39;r&#39;</code></td>
<td>red</td>
</tr>
<tr>
<td><code>&#39;c&#39;</code></td>
<td>cyan</td>
</tr>
<tr>
<td><code>&#39;m&#39;</code></td>
<td>magenta</td>
</tr>
<tr>
<td><code>&#39;y&#39;</code></td>
<td>yellow</td>
</tr>
<tr>
<td><code>&#39;k&#39;</code></td>
<td>black</td>
</tr>
<tr>
<td><code>&#39;w&#39;</code></td>
<td>white</td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">import numpy as np</span><br><span class="line">a &#x3D; np.arange(10)</span><br><span class="line">plt.plot(a,a*1.5,&#39;go-&#39;)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zzl_Alexander/my-image/raw/master/img/Python--Matlibplot%E5%85%A5%E9%97%A8%E7%BB%83%E4%B9%A01B.png" alt="image.png"></p>
<h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">a &#x3D; [1, 2, 3, 4] </span><br><span class="line">b &#x3D; [5, 6, 7, 8]</span><br><span class="line"></span><br><span class="line">plt.plot(a, b, &#39;r--&#39;, label &#x3D; &#39;aa&#39;)</span><br><span class="line">plt.xlabel(&#39;this is x&#39;)</span><br><span class="line">plt.ylabel(&#39;this is y&#39;)</span><br><span class="line">plt.title(&#39;this is a demo&#39;)</span><br><span class="line">plt.legend() # 将图例显示出来</span><br><span class="line"></span><br><span class="line">plt.plot()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zzl_Alexander/my-image/raw/master/img/Python--Matlibplot%E5%85%A5%E9%97%A8%E7%BB%83%E4%B9%A01C.png" alt="image.png"></p>
<h2 id="plt-scatter"><a href="#plt-scatter" class="headerlink" title="plt.scatter()"></a>plt.scatter()</h2><p>散点图</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">a &#x3D; [1, 2, 3, 4]</span><br><span class="line">b &#x3D; [5, 6, 7, 8]</span><br><span class="line"></span><br><span class="line">plt.scatter(a, b, c&#x3D;&#39;r&#39;, marker&#x3D;&#39;v&#39;)</span><br><span class="line"></span><br><span class="line">plt.legend(&#39;x&#39;) # 将图例显示出来</span><br><span class="line"></span><br><span class="line">plt.plot()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/zzl_Alexander/my-image/raw/master/img/Python--Matlibplot%E5%85%A5%E9%97%A8%E7%BB%83%E4%B9%A01D.png" alt="image.png"></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>数据处理</tag>
      </tags>
  </entry>
  <entry>
    <title>Python--Matlibplot入门练习2</title>
    <url>/2021/03/15/Python--Matlibplot%E5%85%A5%E9%97%A8%E7%BB%83%E4%B9%A02/</url>
    <content><![CDATA[<h2 id="figure"><a href="#figure" class="headerlink" title="figure"></a>figure</h2><p>plt.figure(figsize=(8,4))<br />定义图的大小<br><a name="z0q2G"></a></p>
<h2 id="plt-xlim-plt-ylim"><a href="#plt-xlim-plt-ylim" class="headerlink" title="plt.xlim() plt.ylim()"></a>plt.xlim() plt.ylim()</h2><p>限定轴的刻度，范围</p>
<span id="more"></span>

<iframe
  src="https://carbon.now.sh/embed?bg=rgba%281%2C1%2C1%2C1%29&t=seti&wt=sharp&l=auto&ds=true&dsyoff=20px&dsblur=96px&wc=true&wa=false&pv=0px&ph=0px&ln=true&fl=1&fm=Hack&fs=14px&lh=133%25&si=false&es=2x&wm=false&code=import%2520matplotlib.pyplot%2520as%2520plt%250A%250Aa%2520%253D%2520%255B1%252C%25202%252C%25203%252C%25204%255D%250Ab%2520%253D%2520%255B5%252C%25206%252C%25207%252C%25208%255D%250Aplt.figure%28figsize%253D%288%252C4%29%29%250Aplt.xlim%280%252C11%252C2%29%250Aplt.ylim%280%252C9%29%250Aplt.scatter%28a%252C%2520b%252C%2520c%253D%27r%27%252C%2520marker%253D%27v%27%29%250A%250Aplt.legend%28%27x%27%29%2520%2523%2520%25E5%25B0%2586%25E5%259B%25BE%25E4%25BE%258B%25E6%2598%25BE%25E7%25A4%25BA%25E5%2587%25BA%25E6%259D%25A5%250A%250Aplt.plot%28%29%250Aplt.show%28%29"
  style="width: 1280px; height: 308px; border:0; transform: scale(1); overflow:hidden;"
  sandbox="allow-scripts allow-same-origin">
</iframe>





<p><img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/20210315200140.png" alt="image"><br><a name="4KWR0"></a></p>
<h2 id="plt-subplot"><a href="#plt-subplot" class="headerlink" title="plt.subplot()"></a>plt.subplot()</h2><p>多张子图展示在一起<br />subplot(nrows, ncols, index, *<em>kwargs)<br />nrows表示一共有几行，ncols一共有几列，index表示这是第几个子图<br />例如ax1 = plt.subplot(2, 2, 1)  <br />表示该图放在2</em>2的第一个位置</p>
<iframe   src="https://carbon.now.sh/embed?bg=rgba%281%2C1%2C1%2C1%29&t=seti&wt=sharp&l=auto&ds=true&dsyoff=20px&dsblur=96px&wc=true&wa=false&pv=0px&ph=0px&ln=true&fl=1&fm=Hack&fs=14px&lh=133%25&si=false&es=2x&wm=false&code=import%2520matplotlib.pyplot%2520as%2520plt%250A%250A%2523%2520%25E9%25A6%2596%25E5%2585%2588%25E9%2580%259A%25E8%25BF%2587%2520np.linspace%2520%25E6%2596%25B9%25E5%25BC%258F%25E7%2594%259F%25E6%2588%2590%2520x%25EF%25BC%258C%250A%2523%2520%25E5%25AE%2583%25E5%258C%2585%25E5%2590%25AB%25E4%25BA%2586%252050%2520%25E4%25B8%25AA%25E5%2585%2583%25E7%25B4%25A0%25E7%259A%2584%25E6%2595%25B0%25E7%25BB%2584%25EF%25BC%258C%25E8%25BF%2599%2520100%2520%25E4%25B8%25AA%25E5%2585%2583%25E7%25B4%25A0%25E5%259D%2587%25E5%258C%2580%25E7%259A%2584%25E5%2588%2586%25E5%25B8%2583%25E5%259C%25A8%2520%255B0%252C%252050%255D%2520%25E7%259A%2584%25E5%258C%25BA%25E9%2597%25B4%25E4%25B8%258A%250Aimport%2520numpy%2520as%2520np%250A%250Ax%2520%253D%2520np.linspace%280%252C%252050%252C%2520100%29%250A%250A%250Aax1%2520%253D%2520plt.subplot%282%252C%25202%252C%25201%29%2520%250Aplt.plot%28x%252C%2520np.sin%28x%29%252C%2520%27r%27%29%250A%250Aax2%2520%253D%2520plt.subplot%282%252C%25202%252C%25202%252C%2520sharey%253Dax1%29%2520%2520%2523%2520%25E4%25B8%258E%2520ax1%2520%25E5%2585%25B1%25E4%25BA%25ABy%25E8%25BD%25B4%250Aplt.plot%28x%252C%25202%2520*%2520np.cos%28x%29%252C%2520%27g%27%29%250A%250Aax3%2520%253D%2520plt.subplot%282%252C%25202%252C%25203%29%250Aplt.plot%28x%252C%2520np.tan%28x%29%252C%2520%27b%27%29%250A%250Aax4%2520%253D%2520plt.subplot%282%252C%25202%252C%25204%252C%2520sharey%253Dax3%29%2520%2520%2523%2520%25E4%25B8%258E%2520ax3%2520%25E5%2585%25B1%25E4%25BA%25ABy%25E8%25BD%25B4%250Aplt.plot%28x%252C%25202%2520*%2520np.sin%28x%29%252C%2520%27y%27%29%250A%250A%250Aplt.show%28%29%250A%250A"   style="width: 1280px; height: 524px; border:0; transform: scale(1); overflow:hidden;"   sandbox="allow-scripts allow-same-origin"> </iframe>

<p><br /><img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/20210315200200.png" alt="image (1)"><br /><br><br /><br><br /><br><br /></p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>数据处理</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/10/01/hello-world/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="2c39beb0877a86453e756cda3d12ac275a39a9c9a03d50031207c0313c3bd01a">8857952509ef9895f61625fe2d594ef3c9251b16e75667b105d9b8e2f98fa4e0c494f99b3d7554ae30086249b805cde1fe829b34d38aa0681ad350aafa2c2da4c8681f4421e346dbc95e2e6923f9aeeaa7cb0ef799698a147bdd2547f87a667e80c4a457c4883e6a81c948b927aacdc8269abeb88afac5bbc909b14dfc1b0b17a2c72d6e20855b7f036ad637e406b96743a43a6c316871106e837e1bd6267befaadec082c11fd845ddf6c9c26eb5eafa6c71e5f7481fcd0821adeb5e5f7538c7d82b6357cc0a428a90dd2cb346d68f73fd55de4b0ead7d7488faddce0f62dd303df3ea0fe875c5fe284dc715cfa64ab1bdc4a9b449d0fcb4a5e41699583904cbb629413ee14378578d3540101f40ce6e93be912dfedf12723b663517027c0e1f677fa7cb6f67e581c42e8874d27ba96a40f6d9aeec6a527e368987493283f493372cf11342e3d2a4c530c6c3979e12f1c2761035d7ee2a597e6a60988d2d38cb5bb373a6c5c100e6663b683470d7681ff1493d477e1a31b20c08159bacf4406461a024726c9fab32fc0b423009a3942995804910e5a93cef058bc5229daa2c350fb0b30592da132e5c00058daa83114ce3684d937e25d7f9d888d54e7a6f3c76961e17f0156c335bb6e7e9fecc7e4fbaf7bea5c23849bca8d38e9edde3160d9a9e45711b8c450e653706eb619ef2f2a69baf67b88c51971c3a9c87afa86dff05d3dba36e4903b2e2543ac0b5d0260ea2528fdd4f09bb982f0f1c0b717a1c7a0f4a645918b35acdbf7b41e85a42df50ff7eb3b1f0e5d2e619a9dd351b44d0f942d7dc89823967c327536563c7fb8964fa4370488589da03106034c57a542f0b15acb9d597642bd15a20bb3c06a8c340cd583a7a850103f01d602540c7668db6e6e4cbb19893760fa5794a440a0c74043c2091d38480e702c52a65612054b381b4ba18867f34b4337c07d5df8cc17aa415f945521f0017c7db1a88d572d1d678514cd5008a25424b17271dd652a6e37468f5efe1dc718320d603baf7c0d969972a077a6edc19cd271cb4b5e3974f15e1b4381d3f1053bc978ec5728891d6fbedce553f45347a33d904d3d9ecffb633f5e5e32ec408f21c30a7d4d5ca85b21c383bd9d51dea3310bb284eba806a9dc49c19f03a0a4cf24034b487967c50f3d799355a81249b29586a51896bade3be3cdc5f6031249290f04e7fd05df804f7953c214dc15c1e71d3016b3848e74c06dae7f5e1e80eff053c31b8c2da32dfc03d70c3b37c761e92fc5ea4888536f66dba9f642a6cd7a417a7f147003e2705b6f29d7cb8d0acc7e3be94a05111c02cfd79b096e1e2072da27cab648aa9e6e2315af1e67b1d217e1199e0673b0b4c6a37421db26588ba7ab8f7119ec0ab421238122ca513dcf78898e2100ff3416cbddc2ba4238eaae43092d93131d3b7f409de2ea78ab32df9de9caefc53d0572b3e5806c65f1ffe661c8cd64bbf1c54e5f63dc1993bce73df41b20a1bee9f3575bc4646b5eb61433611e6dd0dd728f8a6c78caca55ce957bef323fd8ba47ebb3e19496c4870693100f4ce32ee06ff889de880b50d78c95710dc06d65c0d0a7717a91b43fb741ab16743ed17e1508fb12d722c242166e8d5f96a2cd0a4fcc5c65363faba256d2ec8f484b847b9be8b9aa37c85fc63f92bdb345a3b65ae86bc210d2ea06ee794aaed7baa505bbbbe190177b55289d235a95f47c8d1ebae4275686cf7bd7ae77ec657c965e0148b418e98ee542975e6e43d57c951fab08c79559daf6bd2354e0883aba987dcfe2e408ef332d2001db3740435a7c1fe9784db593da2cbeb1adceb9ee4404f7aeedfc0e0e817cb68aa03d30b264980ba76f845f10f4f1b314bbf4aea226a04bfb24fc33405b28feea57dc2fb0df9f6140f4d0ab246964203985935a560cda463f4369cdfbdc3beb4176457e98d6e26ed183c606d4a0f491d8c003a1ea10ad7ebf522fca18face13f629b9edff8cd94e2fb568a07919586eb2e246d54de8559057c4f82feaacf3eb82912c039d5fdfb9dfda3f28a48e664f2dc1511f3edcc688dff90755ee69e2ed7ecf26973914c855de3dabeef492c1d8c073ea0057cba0f2fb435df3ea97a000e3389383efde12ddbf126f76a4421f0cc49419844a2d3d7875e7c315ae18b8ea5c2a5406723d7a23500713d3cdc9dd63d5eb8107f5719e40045a29eb57814715a5f0fd0bd683bb2d980eeee67bb363f705c38852086d4588ba8b657575d1420f52975b128ba7b406cdeb5d6ef1e997f76c3f71c34516e3f0dd559767ba37d091aa9af7dd29c9b9577d0b49a8c999ae3eb726ad2305a9f7c5850ebfa5ef4778e1bdcb4903a9b61139f900144b080df3474afe3da646f8915422a2af8c50b218ec32952377bc73de50e07e904d242fee491f4e005abe19579bbe9a9c90d8c7b55c488014e3fa197c9e72c165d087537c8cfeb2d675843e532d5baa8162aaa3bc8818e54eff4aef1cb54c51abaf697c1e7f03880e8aab0075b121928ad3e593bfdd9997461f0898d9d7f23e6d890cf0a1f985ef40ce77bdd395cd91e67feab349bde5a943a7b707f8ee9a72911789d80abf5ab3aacfa618c6bf6fb240156e3df4d494ef7fa4e1dc6d55523359aeee1a70a5bcc1aefcd19f6c26d4c081e1396188c439c685b94e101173ef65d1803122cac071e431150a1d93f658ece2168610acea09cb125a3ef3fbfc6194a9ffeed57839b92305c77d585216c956e6b296052cab317b49f3dcb9ee5aba7af707e8556e3055f8cb36e70abc446cf28029c352baadcf1fa112600146c21c68927c1c5dc4b3b9f406974bc8eec88b413938fb67dd2ec6e80702b57c2eefbd9442ce98e80f13672d9e2e5f8ec6233cc86c46373de2eca42deb2b673fe109eb1f16d8e14b6e4e5a0029ea7a5e4a0bf6ed917a0e157ee765efb1846b447f8fcf81304aa1fc236bdac20a3a3fd939da8febae0aa4e3f27cc7d58b0265c27bf74749022ae5f6ac5c3c3fef8689c66c54bf54293e794ba382b5c3c9389b35264308163261e44328dc19a8bcde13d9088a6e722f9349a3a1ec362a8e4fa094e2ab9d5c0ad4ac2eda949fdeef072356bbf2a9a5e2627ee81f766896092a59406ff8504ac6baf72662cb9604222</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>blog上传文章</title>
    <url>/2021/04/14/%E5%86%99%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">title: </span><br><span class="line">author: Alexander</span><br><span class="line">date: </span><br><span class="line">updated: </span><br><span class="line">tags: [,]</span><br><span class="line">categories: </span><br><span class="line">description: </span><br><span class="line">comments: <span class="literal">true</span></span><br><span class="line">math: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象设计—动态建模</title>
    <url>/2021/03/12/%E5%8A%A8%E6%80%81%E5%BB%BA%E6%A8%A1/</url>
    <content><![CDATA[<h3 id="消息概述"><a href="#消息概述" class="headerlink" title="消息概述"></a>消息概述</h3><p>消息（Messages）: 从一个对象（发送者）向另一个或几个其他对象（接收者）发送信号，或由一个对象（发送者或调用者）调用另一个对象（接收者）的操作。</p>
<p>•消息定义的是对象之间某种形式的通信，它可以激发某个操作、唤起信号或导致目标对象的创建或撤销。</p>
<span id="more"></span>

<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/%E6%B6%88%E6%81%AF%E6%A6%82%E8%BF%B0.png" alt="image-20210312163212533" style="zoom:33%;" />

<p>两种系统：<br>顺序系统中的消息（都是同步的）<br>并发系统中的消息:同步（阻断 ，限时），异步（不论是否准备好）</p>
<p>消息的接收者是否唯一<br>1）发消息定向发送给唯一的接受者，为<strong>定向消息</strong>，<br>2）把消息发送给某个范围内所有可能的接收者，为<strong>广播消息</strong></p>
<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/%E6%B6%88%E6%81%AF%E7%AC%A6%E5%8F%B7%E8%A1%A8%E7%A4%BA.png" alt="image-20210312165153349" style="zoom:33%;" />

<h3 id="顺序图"><a href="#顺序图" class="headerlink" title="顺序图"></a>顺序图</h3><p>组成：</p>
<p>•活动者（actor）或者 对象（object）</p>
<p>•生命线（lifeline）</p>
<p>•激活(activation)/ 控制焦点（focus of control）</p>
<p>•消息（message）</p>
<p> <strong>顺序图用来描述对象间的交互行为。</strong>表现用例中的行为顺序，描述了如何一步步完成系统的某项功能</p>
<p>序列图将交互关系表示为一个二维图。其中，纵轴是时间轴，时间沿竖线向下延伸。横轴代表了在交互中各独立的对象。</p>
<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%A1%A8%E7%A4%BA%E6%96%B9%E6%B3%95.png" alt="image-20210312165628621" style="zoom:33%;" />

<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/20210312171501%E5%AF%B9%E8%B1%A1%E9%97%B4%E6%B6%88%E6%81%AF%E9%80%9A%E4%BF%A1.png" alt="image-20210312171500939" style="zoom:33%;" />

<p>复杂控制逻辑有活动图描述更清晰，但<strong>活动图不能表示消息</strong></p>
<h3 id="协作图"><a href="#协作图" class="headerlink" title="协作图"></a>协作图</h3><p>合作图可以用来描述系统<strong>对象之间的交互</strong>,表现对象协作关系的图，动态视图的另一种表现形式。强调这组<strong>对象之间的关系</strong>，强调发送和接受消息的对象之间的结构组织的交互图，显示对象、对象之间的链接以及对象之间的消息 。<br>  它表示了协作中作为各种类元角色的对象所处的位置，在图中主要显示了<strong>类元角色（Classifier Roles）和关联角色（Association Roles）。</strong></p>
<p>1 对象：系统中的对象可以参与一个或多个协作<br>2  链接：表示参与协作执行的<strong>关联</strong>的描述多重性、角色。<br><strong>当协作被实例化时，对象受限于类元角色，连接受限于关联角色</strong></p>
<h3 id="协作图与顺序图的区别与联系"><a href="#协作图与顺序图的区别与联系" class="headerlink" title="协作图与顺序图的区别与联系"></a>协作图与顺序图的区别与联系</h3><p>顺序图</p>
<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/20210312195008%E9%A1%BA%E5%BA%8F%E5%9B%BE.png" alt="image-20210312195008385" style="zoom:33%;" />



<p>协作图</p>
<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/20210312195032%E5%8D%8F%E4%BD%9C%E5%9B%BE.png" style="zoom:33%;" />]]></content>
      <categories>
        <category>系统分析与设计</category>
      </categories>
      <tags>
        <tag>面向对象的设计</tag>
        <tag>动态建模</tag>
      </tags>
  </entry>
  <entry>
    <title>测试使用</title>
    <url>/2020/07/30/%E5%9B%BE%E8%AE%BA/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>A</category>
      </categories>
      <tags>
        <tag>A</tag>
      </tags>
  </entry>
  <entry>
    <title>系统规划方法</title>
    <url>/2021/03/10/%E7%B3%BB%E7%BB%9F%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<h3 id="系统规划方法"><a href="#系统规划方法" class="headerlink" title="系统规划方法"></a>系统规划方法</h3><p>MIS：管理信息系统( Management Information System,简称MS)</p>
<h4 id="战略集合转换法（SST）"><a href="#战略集合转换法（SST）" class="headerlink" title="战略集合转换法（SST）"></a>战略集合转换法（SST）</h4><p>面向主题：决策信息</p>
<p>侧重范围：系统目标</p>
<span id="more"></span>

<p>战略目标看成信息集合</p>
<p>组织的战略目标转化为管理信息系统战略目标</p>
<p>步骤：</p>
<p>识别组织的战略集</p>
<ul>
<li>描绘出组织各类人员或实体结构</li>
<li>识别各类人员或实体结构的目标</li>
<li>对于各类人员或实体识别系统相应的使命</li>
</ul>
<p>将组织战略集转化为信息系统战略</p>
<ul>
<li>根据组织目标确定信息系统目标</li>
<li>对应组织战略集的元素识别相应信息系统战略的约束</li>
<li>根据信息系统目标和约束提出信息系统战略</li>
</ul>
<h4 id="关键成功因素法（CSF）"><a href="#关键成功因素法（CSF）" class="headerlink" title="关键成功因素法（CSF）"></a>关键成功因素法（CSF）</h4><p>面向主题：决策信息</p>
<p>侧重范围：系统总体结构、数据结构</p>
<p>通过分析找出使得企业成功 的关键因素，然后再围绕这些关键因素来确定系统的需求，并进行规划</p>
<p>步骤：</p>
<ul>
<li>了解企业或MIS的战略目标</li>
<li>识别所有的成功因素</li>
<li>确定关键成功因素</li>
<li>明确各关键成功因素的性能指标和评估标准</li>
</ul>
<p>识别目标 — 识别CSF — 识别性能指标 — 定义数据字典</p>
<h4 id="企业资源规划法（BSP）"><a href="#企业资源规划法（BSP）" class="headerlink" title="企业资源规划法（BSP）"></a>企业资源规划法（BSP）</h4><p>面向主题：底层数据</p>
<p>侧重范围：系统目标、系统总体结构、项目计划</p>
<p>为指导企业管理信息系统的开发而建立的规范方法，用于企业内部系统开发</p>
<p>先自上而下识别系统目标、识别企业的过程、识别数据，然后再自下而上的设计系统目标，最后把企业目标转化为信息系统规划的全过程</p>
<p>根据企业目标制定出MIS战略规划的结构化方法</p>
<p>BSP方法采用自上而下的分析和自下而上的实施策略</p>
<p>BSP是最早应用面向过程管理思想的方法</p>
<p>核心步骤：</p>
<p>定义企业目标 — 定义企业过程 — 业务过程重组 — 定义数据类 — 定义信息系统总体结构</p>
<p>企业活动一般由三个方面组成<br>（1）计划和控制<br>（2）产品和服务<br>（3）支持资源</p>
<p>定义业务过程</p>
<ol>
<li><p>识别计划和控制过程</p>
<p>企业计划和控制有关的业务过程一般分为战略规划和管理控制两大类</p>
</li>
<li><p>识别企业产品与服务业务过程</p>
<p>任何产品的生命周期，可分为需求、获取、服务、退出四阶段</p>
</li>
<li><p>识别企业支持资源业务过程</p>
</li>
<li><p>归纳与分析</p>
</li>
<li><p>结果与应用</p>
</li>
</ol>
<p>定义数据类</p>
<ul>
<li>实体法</li>
<li>功能法</li>
</ul>
<p>定义系统总体结构</p>
<p>划分子系统</p>
<p>过程/数据矩阵（U/C矩阵）</p>
<p>行代表数据类、列代表过程   字母U(use)和C(create)来表示过程对数据类的使用和产生。</p>
<p>U/C矩阵的主要功能</p>
<ol>
<li>通过U／C 矩阵的正确性检验，及时发现前段分析和调查工作的疏漏和错误；</li>
<li>通过U／C 矩阵的正确性检验，分析数据的正确性和完整性；</li>
<li>通过对U／C 矩阵的求解过程最终得到子系统的划分；</li>
<li>通过对子系统之间的联系（“U”）可以确定子系统间的共享数据</li>
</ol>
<p>可能的问题：<br>1 多功能生成同一数据类<br>2 数据类无C/U<br>3 C/U分布无规律</p>
<p>可能的解决途径：<br>1 功能合并或数据类分解</p>
<p>2 对功能进行核对</p>
<p>3 行、列的调序</p>
<p>正确性检验</p>
<p>完备性检验：每个数据类必须有一个产生者（C）和至少一个使用者（U），每个功能则必须有产生或使用（U或C）数据类型。</p>
<p>一致性检验：每个数据类型必有且仅有一个产生者（C）。</p>
<p>无冗余性检验：指 U／C矩阵中不允许有空行和空列。<br><img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/CDN/jpg/20210310184451.png" alt="image"></p>
]]></content>
      <categories>
        <category>系统分析与设计</category>
      </categories>
      <tags>
        <tag>系统规划</tag>
        <tag>规划方法</tag>
      </tags>
  </entry>
  <entry>
    <title>面向对象设计---静态建模</title>
    <url>/2021/03/12/%E9%9D%99%E6%80%81%E5%BB%BA%E6%A8%A1/</url>
    <content><![CDATA[<h4 id="类图建立"><a href="#类图建立" class="headerlink" title="类图建立"></a>类图建立</h4><ol>
<li>发现类</li>
<li>发现类的属性</li>
<li>发现类的操作</li>
<li>类之间的关系</li>
<li>调整类图结构<span id="more"></span>
<h4 id="类的分类"><a href="#类的分类" class="headerlink" title="类的分类"></a>类的分类</h4></li>
</ol>
<p>有形性：有形还是抽象</p>
<p>包含性：原子还是聚合</p>
<p>顺序性：并发还是顺序</p>
<p>持久性：短暂、临时、还是持久的</p>
<p>完整性：是易被外界影响，还是保护的</p>
<p>三个主要的类：</p>
<ul>
<li>边界类：系统及其参与者的边界</li>
<li>控制类：系统的控制逻辑</li>
<li>实体类：系统使用的信息</li>
</ul>
<h5 id="边界类"><a href="#边界类" class="headerlink" title="边界类"></a>边界类</h5><img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/%E8%BE%B9%E7%95%8C%E7%B1%BB.png" alt="image-20210311215521409" style="zoom:33%;" />

<p>系统与参与者的边界，即信息或响应的事件</p>
<p>两类边界类</p>
<ul>
<li>用户边界类</li>
<li>系统和设备接口类</li>
</ul>
<p>识别边界类</p>
<p>每对参与者/用例定义一个边界类<br>不描述窗口组件等界面的组成元素。<br>若两个用例同时与一个参与者交互,可共用一个边界类</p>
<h5 id="控制类"><a href="#控制类" class="headerlink" title="控制类"></a>控制类</h5><img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/%E6%8E%A7%E5%88%B6%E7%B1%BB.png" alt="image-20210311215650763" style="zoom:33%;" />

<p>控制类表示系统的控制逻辑</p>
<p>识别控制类</p>
<p>开发早期，为每个用例定义一个控制类，负责该用例的控制逻辑</p>
<p>针对复杂用例，可为备选路径分别定义不同控制类</p>
<p>随着分析的继续，一个复杂用例的控制类可以发展为多个</p>
<p>隔离和协调边界类和实体类。当用例复杂时(如有分支的事件流)，一个用例可以有控制类，本身不处理具体任务，而是调度其它类完成具体的任务。</p>
<p>当用例事件流逻辑结构简单，没必要用控制类，可用边界类实现用例的行为，如“登录”。 </p>
<h5 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h5><img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/%E5%AE%9E%E4%BD%93%E7%B1%BB.png" alt="image-20210311215710974" style="zoom:33%;" />

<p>用例中参与对象，对应现实世界中的事物</p>
<p>实体类描述必须存储的信息及其相关行为</p>
<p>实体类的识别质量取决于文档的风格和质量</p>
<h4 id="类的属性"><a href="#类的属性" class="headerlink" title="类的属性"></a>类的属性</h4><p>类可有任意数目的属性，也可没属性。所有对象共享的属性是类属性，用下划线标识</p>
<p>尽可能将所有属性的可见性设置为private；<br>仅通过set方法更新属性；<br>仅通过get方法访问属性；</p>
<h4 id="类的操作"><a href="#类的操作" class="headerlink" title="类的操作"></a>类的操作</h4><p>一个类可有任意数量的操作或 没操作，且每个操作只应用于该类的对象。 </p>
<p>属性是描述类的对象特性的值，而操作用于操纵属性的值进行改变或执行其他动作。</p>
<p>操作有时 也叫  函数，方法。  </p>
<p>注:类操作:用下划线标识 </p>
<p>（1）寻找潜在的对象类操作<br>系统功能<br>问题域<br>对象状态<br>（2）筛选、确定操作<br>功能性<br>关联性<br>单一性<br>完整性</p>
<h4 id="类之间的关联"><a href="#类之间的关联" class="headerlink" title="类之间的关联"></a>类之间的关联</h4><p>（1）建立实例连接（对象间的静态联系）</p>
<p>​            对象之间的实例连接称为<strong>链接(Link)</strong></p>
<p>​            把类之间的实例连接称为<strong>关联(Association)</strong></p>
<p>（2）消息传递（动态）</p>
<p>​            对象之间的通信只能通过消息的传递和接收完成</p>
<p>（3）筛选对象间的关联</p>
<ul>
<li><p>原始性：删除衍生关联，即重复关联</p>
</li>
<li><p>单一性：删除多重关联关系</p>
</li>
<li><p>结构性：删除非结构的暂时性关系</p>
</li>
<li><p>相关性：删除与实际操作无关的关系</p>
</li>
</ul>
<p>关联（拥有， ASSOSATION，使用实例连接/单，双，自，弱）<br><strong>聚合（整体和部分关系，HAS A比关联 强，比组合 弱）</strong><br><strong>组合（整体和部分关系，合成关系， contains-a，部分不能离开整体）</strong></p>
<p>泛化（一般和特殊关系(区别），继承， GENERALIZATION ）<br>实现（拥有，类和接口的关系 Realization）<br>依赖（DEPENDENCY）</p>
<p>关联和聚合的区别：语义上，关联的两个对象之间一般是平等的<br>关联和泛化（类之间的语义关系）</p>
<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/%E7%B1%BB%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E8%81%94%E7%AC%A6%E5%8F%B7.png" alt="image-20210311230746206" style="zoom: 33%;" />

<h4 id="关联"><a href="#关联" class="headerlink" title="关联"></a>关联</h4><p>程序中,关联常表示拥有对其他对象的引用的实例变量</p>
<p>==导航性==：若A指向B   则B为A的成员变量。 </p>
<ul>
<li>两个类之间有关联，其关联关系可以通过在自己类的属性和操作定义中将相关联的类作为对象成员使用而体现出来。</li>
</ul>
<ul>
<li>在操作定义中也体现了关联关系，将对象作为参数成员使用。</li>
</ul>
<ul>
<li>也可以通过发送消息调用相关联的类的操作。</li>
</ul>
<p>关联：单项关联，有约束的关联，限定关联，关联类</p>
<h5 id="单项关联："><a href="#单项关联：" class="headerlink" title="单项关联："></a>单项关联：</h5><ul>
<li>通过在自己类的属性和操作定义中将相关联的类作为对象成员使用而体现出来。</li>
<li>在操作定义中也体现了关联关系，将对象作为参数成员使用。</li>
<li>也可以通过发送消息调用相关联的类的操作。</li>
</ul>
<p>在系统中可能会存在一些类的属性对象类型为该类本身，这种特殊的关联关系称为<strong>自关联</strong>。例如：一个节点类(Node)的成员又是节点Node类型的对象</p>
<p><strong>多重性关联关系</strong>又称为重数性(Multiplicity)关联关系，表示两个关联对象在数量上的对应关系。在UML中，对象之间的多重性可以直接在关联直线上用一个数字或一个数字范围表示。</p>
<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/%E5%A4%9A%E9%87%8D%E6%80%A7%E5%85%B3%E7%B3%BB.png" alt="image-20210311234025708" style="zoom:33%;" />

<h5 id="有约束的关联"><a href="#有约束的关联" class="headerlink" title="有约束的关联"></a>有约束的关联</h5><p>关联次序（对多关联的多端对象进行排序）</p>
<p>用继承表示有约束的关联</p>
<p>花括号表约束</p>
<h5 id="限定关联："><a href="#限定关联：" class="headerlink" title="限定关联："></a>限定关联：</h5><p>采用限定词把一对多关系简化成一对一关系</p>
<p>受限关联用于一对多或多对多的关联，一个小方块，内标限制内容，位于靠近受限制方的关联末端。</p>
<p>限制符号用来区分关联多端的对象集合，指明了在关联多端某个特殊对象受限制，利用限定词把一对多关系简化成了一对一关系，将多对多简化为多对一。</p>
<p>设计中的类图关联限定符用某种键值或者记号实现的，而不是用Java的引用实现的</p>
<h5 id="关联类："><a href="#关联类：" class="headerlink" title="关联类："></a>关联类：</h5><p><strong>任何时候有多对多的关联，应考虑是否需要一个关联类。</strong></p>
<p>OO语言不直接支持关联类,关联类变为具体类</p>
<p>一个关联类有两个多对一的关联，要创建一个关联类的实例，必须已经创建了它所关联的两个类的实例。</p>
<p><img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN//img/%E5%85%B3%E8%81%94%E7%B1%BB.png" alt="image-20210312001020791"></p>
<h5 id="多重（N元）关联："><a href="#多重（N元）关联：" class="headerlink" title="多重（N元）关联："></a>多重（N元）关联：</h5><p>解决多对多的关联是将其化简为二元关联</p>
<ul>
<li><p>用词组通过限定词方式 </p>
</li>
<li><p>建立链上的属性</p>
</li>
<li><p>增设具体的类</p>
</li>
</ul>
<h5 id="有子集的关联："><a href="#有子集的关联：" class="headerlink" title="有子集的关联："></a>有子集的关联：</h5><h5 id="关联的构造型："><a href="#关联的构造型：" class="headerlink" title="关联的构造型："></a>关联的构造型：</h5><p>丰富了表示法的含义，不改变结构，改变含义</p>
<p>《create》构造型表明源对象<strong>创建了目标对象</strong>,然后把它传递给系统其他部分</p>
<p>《local》构造型表明源类对象<strong>创建了目标类对象实例</strong>,并把这个实例包含在一个局部变量中。</p>
<h4 id="聚合"><a href="#聚合" class="headerlink" title="聚合"></a>聚合</h4><p>在聚合关系中，成员对象是整体对象的一部分，但是成员对象可以脱离整体对象独立存在。</p>
<h4 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h4><p>在组合关系中整体对象可以控制成员对象的生命周期，一旦整体对象不存在，成员对象也将不存在，成员对象与整体对象之间具有同生共死的关系。</p>
<h4 id="泛化"><a href="#泛化" class="headerlink" title="泛化"></a>泛化</h4><p>也就是继承关系，用于描述父类与子类之间的关系，父类又称作基类或超类，子类又称作派生类</p>
<h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><p>是一种使用关系，特定事物的改变有可能会影响到使用该事物的其他事物，在需要表示一个事物使用另一个事物时使用依赖关系。大多数情况下，依赖关系体现在某个类的方法使用另一个类的对象作为参数。</p>
<p>在系统实施阶段，依赖关系通常通过三种方式来实现：</p>
<p>1)第一种也是最常用的一种方式是将一个类的对象作为另一个类中方法的参数</p>
<p>2)第二种方式是在一个类的方法中将另一个类的对象作为其局部变量</p>
<p>3)第三种方式是在一个类的方法中调用另一个类的静态方法。</p>
<h4 id="接口与实现"><a href="#接口与实现" class="headerlink" title="接口与实现"></a>接口与实现</h4><p>在很多面向对象语言中都引入了接口的概念，在接口中，通常没有属性，而且所有的操作都是抽象的，只有操作的声明，没有操作的实现。</p>
<p>接口之间也可以有与类之间关系类似的继承关系和依赖关系，但是接口和类之间还存在一种实现(Realization)关系，在这种关系中，类实现了接口，类中的操作实现了接口中所声明的操作。</p>
<h4 id="类的结构和层次"><a href="#类的结构和层次" class="headerlink" title="类的结构和层次"></a>类的结构和层次</h4><ol>
<li><p>整体和部分结构</p>
</li>
<li><p>一般与特殊结构（分类关系、归纳关系、继承关系）</p>
<p>从特殊类发现一般类</p>
<p>通过增加属性简化一般-特殊结构</p>
<p>取消用途单一的一般类</p>
<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/%E4%B8%80%E8%88%AC%E5%92%8C%E7%89%B9%E6%AE%8A.png" alt="image-20210312151126382" style="zoom: 33%;" />

<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/%E4%B8%80%E8%88%AC%E7%89%B9%E6%AE%8A%E7%BB%93%E6%9E%84.png" alt="image-20210312151607041" style="zoom:33%;" />

<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/%E5%8F%96%E6%B6%88%E7%94%A8%E9%80%94%E5%8D%95%E4%B8%80%E7%9A%84%E4%B8%80%E8%88%AC%E7%B1%BB.png" alt="image-20210312151707321" style="zoom:33%;" /></li>
<li><p>实例连接</p>
<ol>
<li>简单的实例连接<ol>
<li>一对多、多对多的实现</li>
<li>多对多的关联实现</li>
</ol>
<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN/img/%E5%A2%9E%E5%8A%A0%E4%B8%80%E4%B8%AA%E7%B1%BB.png" alt="image-20210312151909501" style="zoom:33%;" />

多对多变成一对多</li>
<li>复杂的实例连接<ol>
<li>采用复杂的实例连接</li>
<li>用对象表示其复杂性</li>
</ol>
</li>
<li>三元（N元）连接</li>
</ol>
</li>
</ol>
<h4 id="对象图"><a href="#对象图" class="headerlink" title="对象图"></a>对象图</h4><p>对象图中包含<strong>对象（Object）和链（Link）</strong>。其中对象是类的特定实例，链是类之间关系的实例，表示对象之间的特定关系。</p>
<p>可以被看作是类图在某一时刻的实例。类图的实例<br>对象图——描述系统在某个时刻的静态结构。</p>
<p>状态：对象的状态包括对象的所有属性和这些属性的当前值<br>行为：没有一个对象是孤立存在的，对象可以被操作，也可以操作别的对象，而行为就是一个对象根据它的状态改变和消息传送所采取的行动和所做出的反应 </p>
<table>
<thead>
<tr>
<th><strong>类图</strong></th>
<th><strong>对象图</strong></th>
</tr>
</thead>
<tbody><tr>
<td>类通常具有三个分栏：名称、属性和操作</td>
<td>对象通常只有两个分栏：名称和属性</td>
</tr>
<tr>
<td>在类的名称分栏中只有类名</td>
<td>对象名称形式为“对象名：类名”，匿名对象名称形式为“：类名”；有下划线</td>
</tr>
<tr>
<td>类中列出了操作</td>
<td>对象图中不包含操作，因为对于属于同一个类的对象而言，其操作是相同的</td>
</tr>
<tr>
<td>类使用关联连接，关联使用名称、角色、多重性以及约束等特征定义。</td>
<td>对象使用链连接，链拥有名称、角色，但是没有多重性。对象代表的是单独的实体，所有的链都是一对一的，因此不涉及到多重性</td>
</tr>
<tr>
<td>类的属性分栏定义了所有属性的特征</td>
<td>对象则只定义了属性的<strong>当前值</strong></td>
</tr>
</tbody></table>
<h4 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h4><p>特殊的抽象类</p>
<p>属性：无（定义属性但不能实现）</p>
<p>操作：抽象操作（只有操作名，没有具体实现）</p>
<p>接口常用来定义或限制软件构件的对外运算</p>
<p><strong>接口是在没有给出对象的实现和状态的情况下对对象行为的描述。接口是一种特殊的类，所有接口都是有构造型&lt;&lt; interface &gt;&gt;的类。在UML中，接口使用一个带有名称的小圆圈来进行表示，并且可以通过一条Realize（实现关系）线与实现它的类相连接。</strong></p>
<img src="https://cdn.jsdelivr.net/gh/zzl-Alexander/CDN//img/%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3%E7%9A%84%E7%B1%BB%E5%9B%BE.png" alt="image-20210311201146189" style="zoom: 33%;" />

<p>箭头指向接口</p>
<p>接口是引用类型的，和抽象类的相似之处有三点：<br>不能实例化；<br>包含未实现的方法声明；<br>位于继承层次的上层<br>派生类必须实现未实现的方法，抽象类是抽象方法，接口是所有成员</p>
<h4 id="接口与抽象类的区别"><a href="#接口与抽象类的区别" class="headerlink" title="接口与抽象类的区别"></a>接口与抽象类的区别</h4><table>
<thead>
<tr>
<th></th>
<th><strong>接口</strong></th>
<th><strong>抽象类</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>概念</strong></td>
<td><strong>定义行为规范，子类是“行为需要按照接口来完成”如“叫”</strong>  <strong>是抽象类的变体，特殊的抽象类</strong></td>
<td>事物的高度聚合，子类对于抽象类是“是”的关系  不’完全’的类**,相当于是接口和具体类的一个中间层.即满足接口的抽象,也满足具体的实现**</td>
</tr>
<tr>
<td><strong>可定义的成员</strong></td>
<td><strong>方法（但不实现）、属性（不包括字段），索引，事件（不包含委托）</strong></td>
<td><strong>可有构造方法，成员变量（可以用不同的修饰符修饰）</strong></td>
</tr>
<tr>
<td><strong>不能包含的</strong></td>
<td>常数，字段，运算符，委托，内部类，析构函数，构造函数，静态成员**(C#)**  JAVA<strong>：变量（除</strong> public static final<strong>成员变量）</strong></td>
<td><strong>不能出现抽象构造函数，抽象静态方法</strong></td>
</tr>
<tr>
<td>抽象<strong>abstract方法</strong></td>
<td>全部（<strong>public权限）</strong></td>
<td><strong>部分。一个抽象类有一个或多个抽象方法</strong></td>
</tr>
<tr>
<td><strong>定义类型方法</strong></td>
<td><strong>不给</strong></td>
<td><strong>可以给出实现也可不给</strong></td>
</tr>
<tr>
<td></td>
<td><strong>一种行为规范</strong></td>
<td><strong>对  对象的抽象</strong></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th></th>
<th><strong>接口</strong></th>
<th><strong>抽象类</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>具体属性</strong></td>
<td><strong>无</strong></td>
<td><strong>可有</strong></td>
</tr>
<tr>
<td><strong>继承类对两者涉及方法的实现</strong></td>
<td><strong>与子类相似，除了该实现类不能从接口定义中继承行为</strong>    <strong>要给出相应的方法和属性实现（都要重写）</strong></td>
<td>对抽象类定义的方法可以不重写（非抽象方法，或是子类也为抽象类）  如果一个非抽象类是某个抽象类的子类，那么它必须重写父类的<strong>abstract方法，即在子类中将abstract方法重新声明，但必须去掉abstract修饰符。同时要保证声明的方法名字、返回类型、参数个数和接口中的方法完全相同</strong></td>
</tr>
<tr>
<td><strong>新增方法</strong></td>
<td><strong>修改继承类，提供新定义方法（一旦公布不应改变</strong></td>
<td><strong>继承类可不做任何处理（不会对子类影响）</strong></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th></th>
<th><strong>接口</strong></th>
<th><strong>抽象类</strong></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>一个类可以实现多个接口</td>
<td>一个类只能继承一个直接的父类，这个父类可能是抽象类</td>
</tr>
<tr>
<td></td>
<td>在抽象类没有可供继承的默认实现时，一般用接口代替该抽象类</td>
<td>定义一个类时不打算给他创建对象，只想作为基类，可将其声明为抽象类</td>
</tr>
<tr>
<td></td>
<td>根本不知道类的存在</td>
<td>子类—父类</td>
</tr>
<tr>
<td></td>
<td>如果行为跨越不同的类，可用接口</td>
<td>对相似类的对象—使用继承类</td>
</tr>
</tbody></table>
<p>接口的优势：</p>
<p>1 不只可以作用于引用类型还可以用于值类型，抽象类只能用于引用类型<br>2 通过接口实现多继承<br>3 可以被多个类型重用<br>4 减少暴露的属性和方法，保护类型对象</p>
<p>缺点：</p>
<p>定义的方法，属性只能相对于继承它的类型。多层继承关系很难。</p>
<h4 id="包图"><a href="#包图" class="headerlink" title="包图"></a>包图</h4><p>包拥有的元素：类、接口、组件、结点、协作（对象类之间的关联）、用例、图以及其他包。<br>一个模型元素不能被一个以上的包所拥有。<br>如果包被撤销，其中的元素也要被撤销。<br>一个包形成了一个命名空间。<br>每个包必须有一个与其他包相区别的名称。<br>两种形式：简单名和路径名。</p>
<p>可见性：包对自身所包含的内部元素的可见性也有定义，<strong>私有元素对包外部元素完全不可见</strong>；protected定义的被保护的元素只对那些与包含这些元素的包有<strong>泛化关系</strong>的包可见；public定义的公共元素对所有引入的包以及它们的后代都可见。</p>
<p>包嵌套的两种表示：<br>（1）内嵌式表示法<br>（2）树形层次结构表示法</p>
<p>包之间可以有<strong>依赖和继承</strong>等关系。</p>
<p>依赖：两个包中的==对象类==之间有依赖，则两个包有依赖；<br>在一个包中==引入==另一个包输出的元素<br>继承：包之间的继承关系描述了系统的接口。</p>
]]></content>
      <categories>
        <category>系统分析与设计</category>
      </categories>
      <tags>
        <tag>面向对象的设计</tag>
        <tag>静态建模</tag>
      </tags>
  </entry>
  <entry>
    <title>A01答疑总结</title>
    <url>/2021/03/18/A01%E7%AD%94%E7%96%91%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="e272aae7efda7835d83ca3e1dd3b8164ff727c4eb3a032aa18c5cf999034da43"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 内部资料需要密码，只允许我们看.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>Mac上使用VSCode编辑Latex+Skim跳转预览</title>
    <url>/2021/03/18/Mac%E4%B8%8A%E4%BD%BF%E7%94%A8VSCode%E7%BC%96%E8%BE%91Latex+Skim%E8%B7%B3%E8%BD%AC%E9%A2%84%E8%A7%88/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="57054eaab5aec90ff016b74580c15d1293880db314b675c79b253f3e1a8cc541">fa609df12acca9fd5a65b3cc320f972365657f851aefd155068797416e9e2762534e67a2ab0a0ca180cd7d6c320bcd590d1ec98a850d57bec49e9dd089004e6a2c2172ab83c3a615ff7b8d34ab16788d7ae4f6bae6d4b2bb69b25db6fa4204d9403fcdf7ee6e0690f22c8fe3e9b0603a13cf3f22a4682f66800879c3cea746b2febd3e9cc8883c522a46e929c02bf28126db4dece4c9ef5840389909aef07b766d43d00afbeb8d92011ec943450b9b43f546b39d346dd99eb3680588ecd2781c3e5c4f46d9c548a53f00ebfe9b171ad7f173b7f27598ecaa6a89c81008fbcd7e0fc73efbfcfc85b1dd1310a0b88286c5eb1ba0c03257dfa4a7b0e71c74ef3c16c9395322ef63d85a8cde686bf08594fc729c88fdc73ac186b28111a58573283831c689cc2cd9c8e73f5ee38ca7370a974b3bd302f49db7c89ee22120a4d299c9a575b5a5bee074eacb7950417f90972f0a8237f159c61f7dd311a95a724beaec5f4ad059fc1b74bf3bfde41c61a8aae5fae88b0ead1994ccc41e5822b9c718f53faf8d3cb4c2c490f18658d0070d77b97a34f7559277206b6d9ca1d3d65875ff5af3372b036e4794d8436c8961c16eb35bda9a1983596af81e78d8dfe8b6fe4e84d5425330f9c50c829be722b68bc08dacca09ceb0dedb31e2f60fda99e809901e6c997602f426d3d867559ab2eb4461795a8dc2f867cf46a19180d80894a0c8822006f464bd60decb4e01b9fce55c30e0a088cac162be5f3620da407924b7bb054a165d333eec8e5ea704502eb657ad</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 内部资料需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>论文</category>
        <category>Latex</category>
      </categories>
      <tags>
        <tag>Latex</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>Acwing101. 最高的牛</title>
    <url>/2021/04/14/acwing101%E6%9C%80%E9%AB%98%E7%9A%84%E7%89%9B/</url>
    <content><![CDATA[<h3 id="Acwing101-最高的牛"><a href="#Acwing101-最高的牛" class="headerlink" title="Acwing101. 最高的牛"></a>Acwing101. 最高的牛</h3><p>有 N 头牛站成一行，被编队为 1、2、3…N，每头牛的身高都为整数。</p>
<p>当且仅当两头牛中间的牛身高都比它们矮时，两头牛方可看到对方。</p>
<span id="more"></span>

<p>现在，我们只知道其中最高的牛是第 P 头，它的身高是 H ，剩余牛的身高未知。</p>
<p>但是，我们还知道这群牛之中存在着 M 对关系，每对关系都指明了某两头牛 A 和 B 可以相互看见。</p>
<p>求每头牛的身高的最大可能值是多少。</p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行输入整数 N,P,H,M，数据用空格隔开。</p>
<p>接下来 M 行，每行输出两个整数 A 和 B ，代表牛 A 和牛 B 可以相互看见，数据用空格隔开。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一共输出 N 行数据，每行输出一个整数。</p>
<p>第 i 行输出的整数代表第 i 头牛可能的最大身高。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤N≤10000,<br>1≤H≤1000000,<br>1≤A,B≤10000,<br>0≤M≤10000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>9 3 5 5<br>1 3<br>5 3<br>4 3<br>3 7<br>9 8</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>5<br>4<br>5<br>3<br>4<br>4<br>5<br>5<br>5<br>注意：<br>此题中给出的关系对可能存在重复</p>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>如果a,b能相互看到，则a,b之间的数都减1。区间都减一个常数，用差分</p>
<p>每个区间只会嵌套（最多交点重合），不会出现区间相交</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by alexa on 2021/4/14.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>+<span class="number">50</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAXN];</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;&gt;s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,p,h,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;p&gt;&gt;h&gt;&gt;m;</span><br><span class="line">    a[<span class="number">0</span>]=h;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        <span class="keyword">if</span>(x&gt;y)swap(x,y);</span><br><span class="line">        <span class="keyword">if</span>(!s.count(&#123;x,y&#125;))&#123;</span><br><span class="line">            s.insert(&#123;x,y&#125;);</span><br><span class="line">            a[x+<span class="number">1</span>]--,a[y]++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        a[i]+=a[i<span class="number">-1</span>];</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>差分</tag>
      </tags>
  </entry>
  <entry>
    <title>git操作</title>
    <url>/2021/04/14/git%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h3 id="git-的相关操作"><a href="#git-的相关操作" class="headerlink" title="git 的相关操作"></a>git 的相关操作</h3><p>git init 初始化</p>
<p>git add .    把所有修改的文件加到下一次的commit中，也可把.换成特定的文件名</p>
<p>git commit -m “” 提交加入的文件，双引号内填写提交信息</p>
<span id="more"></span>

<p>git status 显示哪些文件已被staged、未被staged以及未追踪（untracked）</p>
<p>git switch -c &lt; breach &gt; 进行分支的切换，去掉-c将切换到一个已有分支</p>
<p>git merge &lt; branch &gt; 将制定分支合并到当前分支</p>
<p>git remote add &lt; name &gt; &lt; url &gt; 添加一个新的远程连接。添加后可使用name作为指定url远程连接的名称</p>
<p>git fetch &lt; remote &gt; &lt; branch &gt; 从指定remote抓取指定branch的所有commit到本地repo。去掉branch将抓取远程所有分支的修改</p>
<p>git pull &lt; remote &gt; 从指定remote抓取所有分支的commit并立刻合并到本地repo</p>
<p>git push &lt; remote &gt; &lt; branch &gt; 将本地指定的branch推送到指定远程remote。如果远程没有对应的分支，将自动在远程创建此分支</p>
<p>git config –global user.name &lt; name &gt;</p>
<p>git config –global user.email &lt; email &gt;<br><br></p>
<h3 id="把本地文件提交到github"><a href="#把本地文件提交到github" class="headerlink" title="把本地文件提交到github"></a>把本地文件提交到github<br></h3><p>git init<br><br>git add README.md<br><br>git commit -m “first commit”<br><br>git branch -M master<br><br>git remote add origin &lt; 仓库地址 &gt;<br>git push -u origin master</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>homebrew加速</title>
    <url>/2021/04/05/homebrew/</url>
    <content><![CDATA[<p>homebrew换源加速</p>
<span id="more"></span>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"># 替换brew.git:</span><br><span class="line">cd <span class="string">&quot;$(brew --repo)&quot;</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https:<span class="comment">//mirrors.aliyun.com/homebrew/brew.git</span></span><br><span class="line"></span><br><span class="line"># 替换homebrew-core.git:</span><br><span class="line">cd <span class="string">&quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot;</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https:<span class="comment">//mirrors.aliyun.com/homebrew/homebrew-core.git</span></span><br><span class="line"></span><br><span class="line"># 替换homebrew-cask.git:</span><br><span class="line">cd <span class="string">&quot;$(brew --repo)&quot;</span>/Library/Taps/homebrew/homebrew-cask</span><br><span class="line">git remote <span class="built_in">set</span>-url origin https:<span class="comment">//mirrors.ustc.edu.cn/homebrew-cask.git</span></span><br><span class="line"></span><br><span class="line"># 替换homebrew-bottles:</span><br><span class="line">echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles&#x27; &gt;&gt; ~/.zshrc</span><br><span class="line">source ~/.zshrc</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>修改为国内镜像源</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">cd /usr/local/Homebrew</span><br><span class="line"></span><br><span class="line">git -C <span class="string">&quot;$(brew --repo)&quot;</span> remote <span class="built_in">set</span>-url origin https:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span></span><br><span class="line"></span><br><span class="line">git -C <span class="string">&quot;$(brew --repo homebrew/core)&quot;</span> remote <span class="built_in">set</span>-url origin https:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span></span><br><span class="line"></span><br><span class="line">git -C <span class="string">&quot;$(brew --repo homebrew/cask)&quot;</span> remote <span class="built_in">set</span>-url origin https:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git</span></span><br><span class="line"></span><br><span class="line">brew update</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>复原的方法</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">cd /usr/local/Homebrew</span><br><span class="line"></span><br><span class="line">git -C <span class="string">&quot;$(brew --repo)&quot;</span> remote <span class="built_in">set</span>-url origin https:<span class="comment">//github.com/Homebrew/brew.git</span></span><br><span class="line"></span><br><span class="line">git -C <span class="string">&quot;$(brew --repo homebrew/core)&quot;</span> remote <span class="built_in">set</span>-url origin https:<span class="comment">//github.com/Homebrew/homebrew-core.git</span></span><br><span class="line"></span><br><span class="line">git -C <span class="string">&quot;$(brew --repo homebrew/cask)&quot;</span> remote <span class="built_in">set</span>-url origin https:<span class="comment">//github.com/Homebrew/homebrew-cask.git</span></span><br><span class="line"></span><br><span class="line">brew update</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>homebrew</category>
      </categories>
      <tags>
        <tag>homebrew</tag>
      </tags>
  </entry>
  <entry>
    <title>给原来的hexo要装新的插件</title>
    <url>/2021/03/18/%E7%BB%99%E5%8E%9F%E6%9D%A5%E7%9A%84hexo%E8%A6%81%E8%A3%85%E6%96%B0%E7%9A%84%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<p>1.把原来的source克隆下来，在本地装好插件                                                                                                                  </p>
<p>2.然后传到新的仓库例如A11     </p>
<span id="more"></span>                                                                                                                                        

<p>3.需要给A11，添加秘钥（Repository secrets  HEXO_DEPLOY_PRI），秘钥存在blogSourceCodeFinal仓库的github-deploy-key文件里</p>
<p>4.还需修改A11里的.github/workflows/deploy.yml文件的第11行</p>
<p>5.然后修改A11里的themes/next/_config.yml文件的第300行</p>
<p>6.然后就完事了</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>设计原则</title>
    <url>/2021/03/23/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</url>
    <content><![CDATA[<p><a name="teaqH"></a></p>
<h3 id="总的原则"><a href="#总的原则" class="headerlink" title="总的原则"></a>总的原则</h3><p>抽象与复用<br />松耦合<br><a name="jYbyJ"></a></p>
<span id="more"></span>
<h3 id="1、单一设计原则"><a href="#1、单一设计原则" class="headerlink" title="1、单一设计原则"></a>1、单一设计原则</h3><p><a name="LZwGq"></a></p>
<h3 id="2、开闭原则（OCP）"><a href="#2、开闭原则（OCP）" class="headerlink" title="2、开闭原则（OCP）"></a>2、开闭原则（OCP）</h3><p>模块和函数应该对扩展开放，对修改封闭<br />通过扩展实现变化，而不是修改<br><a name="0ei0B"></a></p>
<h3 id="3、里氏代换原则（LSP）"><a href="#3、里氏代换原则（LSP）" class="headerlink" title="3、里氏代换原则（LSP）"></a>3、里氏代换原则（LSP）</h3><p>子类型必须能够替换掉它们的基类型<br />是对开闭原则的补充。实现开闭原则的关键步骤就是抽象化<br /><br><br />LSP是多态顺利实现的保证，从而使OCP成为可能。<br />正是子类型的可替代性才使得使用基类的模块在无需修改的情况下就可以扩展。<br />增加或修改任何一个子类型，基类不用修改（封闭）<br />基类的使用者（客户程序）通过多态得到扩展或修改过的行为（开放）<br><a name="xxRN7"></a></p>
<h3 id="4、依赖倒置原则"><a href="#4、依赖倒置原则" class="headerlink" title="4、依赖倒置原则"></a>4、依赖倒置原则</h3><p>改掉过程化的高层依赖底层，变成细节依赖抽象。即针对接口编程，不针对实现编程。使用接口和抽象类对返回值和变量说明<br />设计时，尽量从抽象类继承，而不是从具体类继承。继承等级树的所有叶子节点应当是具体类，而所有的树枝节点应当是抽象类或者接口。</p>
<ul>
<li>可减少类间的耦合，提高系统的稳定性，减少并行开发引起的风险，提高代码的可读性和可维护性。</li>
<li>大型项目中体现明显。规避非技术性因素引起的问题。以轻松扩展</li>
<li>是几个设计原则中最难实现的。是实现开闭原则的重要途径</li>
</ul>
<p>A.高层模块不应该依赖于底层模块，二者都应该依赖于抽象（针对抽象编程）<br />B.抽象不应该依赖于细节，细节应该依赖于抽象</p>
<ul>
<li>高层使用低层的对象及其服务</li>
<li>设计抽象接口，上层类使用接口，下层类实现接口<br><a name="F7Sus"></a><h3 id="5、接口分离原则（ISP）"><a href="#5、接口分离原则（ISP）" class="headerlink" title="5、接口分离原则（ISP）"></a>5、接口分离原则（ISP）</h3>尽量提供小接口。简单设计会过大。因为每个客户程序并不依赖于接口里的很多<br><a name="xXjFd"></a><h3 id="6、多用组合少用继承"><a href="#6、多用组合少用继承" class="headerlink" title="6、多用组合少用继承"></a>6、多用组合少用继承</h3>希望类之间<strong>尽量是低耦合</strong>的关系，而不希望是强耦合关系<br />即在许多情况下需要避开继承的缺点，而需要组合的优点<br><a name="zH5XO"></a><h3 id="7、迪米特法则"><a href="#7、迪米特法则" class="headerlink" title="7、迪米特法则"></a>7、迪米特法则</h3>知识最少原则，不要和陌生人说话。熟人好办事<br />即 一个对象应该对其他对象有尽可能少的了解。即 <strong>两个类不必彼此直接通信</strong>。通过第三者调用对方的方法。</li>
</ul>
]]></content>
      <categories>
        <category>系统分析与设计</category>
      </categories>
      <tags>
        <tag>系统分析与设计</tag>
        <tag>设计原则</tag>
      </tags>
  </entry>
  <entry>
    <title>Ms</title>
    <url>/2021/03/24/Ms/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="72f62e9507e5f536650a9b13c3233f7fafb9262a8fcb755c8d569d885ba0d654"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂未公布.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
</search>
