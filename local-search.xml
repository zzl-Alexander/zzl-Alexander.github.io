<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Python--Matlibplot入门练习1</title>
    <link href="/2021/01/30/Python--Matlibplot%E5%85%A5%E9%97%A8%E7%BB%83%E4%B9%A01/"/>
    <url>/2021/01/30/Python--Matlibplot%E5%85%A5%E9%97%A8%E7%BB%83%E4%B9%A01/</url>
    
    <content type="html"><![CDATA[<h1 id="Python–Matlibplot入门练习1"><a href="#Python–Matlibplot入门练习1" class="headerlink" title="Python–Matlibplot入门练习1"></a>Python–Matlibplot入门练习1</h1><p><a name="Bt8qq"></a></p><h2 id="np-linspace"><a href="#np-linspace" class="headerlink" title="np.linspace()"></a>np.linspace()</h2><p>numpy.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None)<br><a name="xDDDc"></a></p><h3 id="endpoint"><a href="#endpoint" class="headerlink" title="endpoint"></a>endpoint</h3><p>endpoint表示生成的数组是否包含stop<br /><br><br />endpoint=True</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">x=np.linspace(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>,num=<span class="hljs-number">10</span>,endpoint=<span class="hljs-literal">True</span>)<br>print(x)<br>结果：[  <span class="hljs-number">1.</span>  <span class="hljs-number">12.</span>  <span class="hljs-number">23.</span>  <span class="hljs-number">34.</span>  <span class="hljs-number">45.</span>  <span class="hljs-number">56.</span>  <span class="hljs-number">67.</span>  <span class="hljs-number">78.</span>  <span class="hljs-number">89.</span> <span class="hljs-number">100.</span>]<br></code></pre></td></tr></table></figure><p>endpoint=False</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">x=np.linspace(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>,num=<span class="hljs-number">10</span>,endpoint=<span class="hljs-literal">False</span>)<br>print(x)<br>结果：[ <span class="hljs-number">1.</span>  <span class="hljs-number">10.9</span> <span class="hljs-number">20.8</span> <span class="hljs-number">30.7</span> <span class="hljs-number">40.6</span> <span class="hljs-number">50.5</span> <span class="hljs-number">60.4</span> <span class="hljs-number">70.3</span> <span class="hljs-number">80.2</span> <span class="hljs-number">90.1</span>]<br></code></pre></td></tr></table></figure><p><a name="44fcA"></a></p><h3 id="retstep"><a href="#retstep" class="headerlink" title="retstep"></a>retstep</h3><p>相当于公差<br />retstep=True</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">x=np.linspace(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>,num=<span class="hljs-number">10</span>,retstep=<span class="hljs-literal">True</span>)<br>print(x)<br>结果：(array([  <span class="hljs-number">1.</span>,  <span class="hljs-number">12.</span>,  <span class="hljs-number">23.</span>,  <span class="hljs-number">34.</span>,  <span class="hljs-number">45.</span>,  <span class="hljs-number">56.</span>,  <span class="hljs-number">67.</span>,  <span class="hljs-number">78.</span>,  <span class="hljs-number">89.</span>, <span class="hljs-number">100.</span>]), <span class="hljs-number">11.0</span>)<br></code></pre></td></tr></table></figure><p><a name="r7X4a"></a></p><h3 id="dtype"><a href="#dtype" class="headerlink" title="dtype"></a>dtype</h3><p>结果的输出类型 有np.int   np.bool……..</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">x=np.linspace(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>,num=<span class="hljs-number">10</span>,dtype=np.<span class="hljs-built_in">int</span>)<br>print(x)<br>结果：[  <span class="hljs-number">1</span>  <span class="hljs-number">12</span>  <span class="hljs-number">23</span>  <span class="hljs-number">34</span>  <span class="hljs-number">45</span>  <span class="hljs-number">56</span>  <span class="hljs-number">67</span>  <span class="hljs-number">78</span>  <span class="hljs-number">89</span> <span class="hljs-number">100</span>]<br></code></pre></td></tr></table></figure><p><a name="kCiPD"></a></p><h2 id="plt-plot"><a href="#plt-plot" class="headerlink" title="plt.plot()"></a>plt.plot()</h2><p>plt.plot(x,y,format_string,**kwargs)</p><blockquote><p><strong>x</strong>:X轴上的数据，一般为列表或numpy中的数组，可选（只绘制一条曲线时，可省略，把y轴数据的索引值作为x取值）；<br><strong>y</strong>:Y轴上的数据，一般为列表或numpy中的数组；<br><strong>format_string</strong>:控制绘制曲线的格式字符串，可选；<br><strong>**kwargs</strong>:第二组或者更多的（x,y,format_string），可以绘制多条曲线，当我们绘制多条曲线时，各条曲线的x不能省略。</p></blockquote><p><a name="L7JIT"></a></p><h3 id="同时绘制多条曲线"><a href="#同时绘制多条曲线" class="headerlink" title="同时绘制多条曲线"></a>同时绘制多条曲线</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.arange(<span class="hljs-number">10</span>)<br>plt.plot(a,a*<span class="hljs-number">1.5</span>,a,a*<span class="hljs-number">2.5</span>,a,a*<span class="hljs-number">3.5</span>,a,a**<span class="hljs-number">2</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12458968/1611972856678-990ab538-9d5a-4631-9870-1deddde6661e.png#align=left&display=inline&height=240&margin=%5Bobject%20Object%5D&name=image.png&originHeight=480&originWidth=640&size=34329&status=done&style=none&width=320" alt="image.png"><br><a name="GHDPF"></a></p><h3 id="曲线格式"><a href="#曲线格式" class="headerlink" title="曲线格式"></a>曲线格式</h3><p>format_string控制绘制曲线的格式字符串，由颜色字符，风格字符，和标记字符组成。<br /><code>fmt = &#39;[marker][line][color]&#39;</code><br />color:控制颜色，color = ‘g’;<br />linestyle:控制线条风格，linestyle = ‘dashed’;<br />marker:标记的风格，marker = ‘o’;<br />markerfacecolor:标记的颜色；<br />markersize;标记的大小;<br /><strong>Markers</strong></p><table><thead><tr><th>character</th><th>description</th></tr></thead><tbody><tr><td><code>&#39;.&#39;</code></td><td>point marker</td></tr><tr><td><code>&#39;,&#39;</code></td><td>pixel marker</td></tr><tr><td><code>&#39;o&#39;</code></td><td>circle marker</td></tr><tr><td><code>&#39;v&#39;</code></td><td>triangle_down marker</td></tr><tr><td><code>&#39;^&#39;</code></td><td>triangle_up marker</td></tr><tr><td><code>&#39;&lt;&#39;</code></td><td>triangle_left marker</td></tr><tr><td><code>&#39;&gt;&#39;</code></td><td>triangle_right marker</td></tr></tbody></table><table><thead><tr><th><code>&#39;1&#39;</code></th><th>tri_down marker</th></tr></thead><tbody><tr><td><code>&#39;2&#39;</code></td><td>tri_up marker</td></tr><tr><td><code>&#39;3&#39;</code></td><td>tri_left marker</td></tr><tr><td><code>&#39;4&#39;</code></td><td>tri_right marker</td></tr><tr><td><code>&#39;s&#39;</code></td><td>square marker</td></tr><tr><td><code>&#39;p&#39;</code></td><td>pentagon marker</td></tr><tr><td><code>&#39;*&#39;</code></td><td>star marker</td></tr><tr><td><code>&#39;h&#39;</code></td><td>hexagon1 marker</td></tr><tr><td><code>&#39;H&#39;</code></td><td>hexagon2 marker</td></tr><tr><td><code>&#39;+&#39;</code></td><td>plus marker</td></tr><tr><td><code>&#39;x&#39;</code></td><td>x marker</td></tr><tr><td><code>&#39;D&#39;</code></td><td>diamond marker</td></tr><tr><td><code>&#39;d&#39;</code></td><td>thin_diamond marker</td></tr><tr><td>`’</td><td>‘`</td></tr><tr><td><code>&#39;_&#39;</code></td><td>hline marker</td></tr></tbody></table><p><br /><strong>Line Styles</strong></p><table><thead><tr><th>character</th><th>description</th></tr></thead><tbody><tr><td><code>&#39;-&#39;</code></td><td>solid line style</td></tr><tr><td><code>&#39;--&#39;</code></td><td>dashed line style</td></tr><tr><td><code>&#39;-.&#39;</code></td><td>dash-dot line style</td></tr><tr><td><code>&#39;:&#39;</code></td><td>dotted line style</td></tr></tbody></table><p><strong><br />**Colors</strong></p><table><thead><tr><th>character</th><th>color</th></tr></thead><tbody><tr><td><code>&#39;b&#39;</code></td><td>blue</td></tr><tr><td><code>&#39;g&#39;</code></td><td>green</td></tr><tr><td><code>&#39;r&#39;</code></td><td>red</td></tr><tr><td><code>&#39;c&#39;</code></td><td>cyan</td></tr><tr><td><code>&#39;m&#39;</code></td><td>magenta</td></tr><tr><td><code>&#39;y&#39;</code></td><td>yellow</td></tr><tr><td><code>&#39;k&#39;</code></td><td>black</td></tr><tr><td><code>&#39;w&#39;</code></td><td>white</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.arange(<span class="hljs-number">10</span>)<br>plt.plot(a,a*<span class="hljs-number">1.5</span>,<span class="hljs-string">&#x27;go-&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12458968/1611974025259-70ff0795-1733-4327-bebe-921eae2e4c7c.png#align=left&display=inline&height=240&margin=%5Bobject%20Object%5D&name=image.png&originHeight=480&originWidth=640&size=20069&status=done&style=none&width=320" alt="image.png"><br><a name="pZKCt"></a></p><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br>a = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>] <br>b = [<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>]<br><br>plt.plot(a, b, <span class="hljs-string">&#x27;r--&#x27;</span>, label = <span class="hljs-string">&#x27;aa&#x27;</span>)<br>plt.xlabel(<span class="hljs-string">&#x27;this is x&#x27;</span>)<br>plt.ylabel(<span class="hljs-string">&#x27;this is y&#x27;</span>)<br>plt.title(<span class="hljs-string">&#x27;this is a demo&#x27;</span>)<br>plt.legend() <span class="hljs-comment"># 将图例显示出来</span><br><br>plt.plot()<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12458968/1611974487224-05ded257-5d18-460d-b67d-8c58ea50b9f5.png#align=left&display=inline&height=240&margin=%5Bobject%20Object%5D&name=image.png&originHeight=480&originWidth=640&size=24627&status=done&style=none&width=320" alt="image.png"><br><a name="NEaIk"></a></p><h2 id="plt-scatter"><a href="#plt-scatter" class="headerlink" title="plt.scatter()"></a>plt.scatter()</h2><p>散点图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br>a = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br>b = [<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>]<br><br>plt.scatter(a, b, c=<span class="hljs-string">&#x27;r&#x27;</span>, marker=<span class="hljs-string">&#x27;v&#x27;</span>)<br><br>plt.legend(<span class="hljs-string">&#x27;x&#x27;</span>) <span class="hljs-comment"># 将图例显示出来</span><br><br>plt.plot()<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12458968/1611974797589-eb60ed5e-1547-4d36-b76e-c62e4dc13a84.png#align=left&display=inline&height=240&margin=%5Bobject%20Object%5D&name=image.png&originHeight=480&originWidth=640&size=14025&status=done&style=none&width=320" alt="image.png"><br /></p>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>数据处理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PAC自定义规则</title>
    <link href="/2021/01/30/PAC%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A7%84%E5%88%99/"/>
    <url>/2021/01/30/PAC%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A7%84%E5%88%99/</url>
    
    <content type="html"><![CDATA[<h1 id="PAC自定义规则"><a href="#PAC自定义规则" class="headerlink" title="PAC自定义规则"></a>PAC自定义规则</h1><p>某些特定网站需要在全局模式下访问，来回切换很麻烦<br />在PAC文件中加入要访问的网站的url<br><a name="B6CaY"></a></p><h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><ul><li>通配符支持，如 <em>.example.com/</em> 实际书写时可省略 如 .example.com/ 意即 <code>*.example.com/*</code></li><li>正则表达式支持，以\开始和结束， 如 [\w]+://example.com<br />例外规则 @@，如 @@<em>.example.com/</em> 满足@@后规则的地址不使用代理</li><li>匹配地址开始和结尾 |，如 |<a href="http://example.com、example.com|/">http://example.com、example.com|</a> 分别表示以 <a href="http://example.com/">http://example.com</a> 开始和以 example.com 结束的地址</li><li>|| 标记，如 ||example.com 则 <a href="http://example.com/">http://example.com</a> 、<a href="https://example.com/">https://example.com</a> 、<a href="ftp://example.com/">ftp://example.com</a> 等地址均满足条件，只用于匹配地址开头</li><li>注释 ! 如 ! Comment</li><li>分隔符^，表示除了字母、数字或者 _ - . % 之外的任何字符。如 <a href="http://example.com^/">http://example.com^</a> ，<a href="http://example.com/">http://example.com/</a> 和<a href="http://example.com:8000/">http://example.com:8000/</a> 均满足条件，而 <a href="http://example.com.ar/">http://example.com.ar/</a> 不满足条件<br><a name="MxSse"></a><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2>在v2ray中的PAC中，在填写手动规则里填写<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">i.stack.imgur.com<br>|https://i.stack.imgur.com/<br></code></pre></td></tr></table></figure>点击保存设置并从GFW List更新<br />浏览Pac文件 发现多了下面两行内容<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;i.stack.imgur.com&quot;</span>,<br><span class="hljs-string">&quot;|https:\/\/i.stack.imgur.com\/&quot;</span>,<br></code></pre></td></tr></table></figure>如果不知道怎么写</li></ul><p>直接把url的网址比较独特的一段粘贴来就行，因为支持通配符</p><p>比如下面的</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.example</span><span class="hljs-selector-class">.com</span><br></code></pre></td></tr></table></figure><p>就相当于匹配了</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">*<span class="hljs-selector-class">.example</span><span class="hljs-selector-class">.com</span>*<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>科学上网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/01/23/hello-world/"/>
    <url>/2021/01/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试使用</title>
    <link href="/2020/07/30/%E5%9B%BE%E8%AE%BA/"/>
    <url>/2020/07/30/%E5%9B%BE%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>A</category>
      
    </categories>
    
    
    <tags>
      
      <tag>A</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
